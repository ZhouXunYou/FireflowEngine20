######################################################
#
# Fireflow引擎定制说明：
#   使用FireWorkflow工作流引擎一般都需要将引擎的一些模块按照项目实际情况 
# 进行定制，本配置文件的定制项目符合绝大多数场景。
#   请根据实际情况将本文修改后，重命名为“FireflowContext-Override.properties”，、
# 放在classpath根目录下；Fireworkflow系统会自动用本文的配置覆盖缺省配置。
#
#   如果需要对FireWorkflow进行更深层次的客户化，建议将fireflow-
# fpdl20.jar/META-INF/fireflow-config中的spring配置文件全部
# 拷贝出来，进行系统的修改，然后再import到主配置中。
#
######################################################

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 1、Fireflow Engine需要定制的模块（module）
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# 1.1 设置TransactionTemplate
fireflowRuntimeContext.transactionTemplate=bean-ref:demoTransactionTemplate

# 1.2、日历服务模块。缺省的日历服务仅将周六周日定为节假日，一般情况下都需要扩展org.fireflow.engine.modules.calendar.impl.CalendarServiceDefaultImpl，
# 假设项目中扩展的日历服务的bean id是 myCalendarService,则用myCalendarService替换下面的fireflowDefaultCalendarService
fireflowRuntimeContext.defaultEngineModules[org.fireflow.engine.modules.calendar.CalendarService]=bean-ref:fireflowDefaultCalendarService

# 1.3、组织机构连接器，用于连接项目中已有的组织机构/用户管理子系统，一般情况下扩展org.fireflow.engine.modules.ousystem.impl.OUSystemConnectorEmptyImpl
# 假设项目扩展的组织机构连接器是myOUSystemConnector，则用myOUSystemConnector替换下面的ouSystemConnectorEmptyImpl
fireflowRuntimeContext.defaultEngineModules[org.fireflow.engine.modules.ousystem.OUSystemConnector]=bean-ref:demoOuSystemConnector

# 1.4 表单系统连接器，当业务系统采用了某种表单引擎时，可以定制该连接器。从而使得流程设计器可以直接使用该表单系统中的表单。
fireflowRuntimeContext.defaultEngineModules[org.fireflow.engine.modules.formsystem.FormSystemConnector]=bean-ref:formSystemConnectorEmptyImpl


# 1.5 流程装载策略，Fireflow引擎缺省的装载策略是：根据传入的processId找到最新版本的流程定义文件，根据该文件创建流程实例。
# 但是很多情况下，需要根据流程发起部门的ID等多种因素，来决定启动哪个版本的流程；如果有这种需求，请定制装载策略。
# 假设定制的装载策略的bean Id是myProcessLoadStrate，请替换下面的fireflowDefaultProcessLoadStrategy
fireflowRuntimeContext.defaultEngineModules[org.fireflow.engine.modules.loadstrategy.ProcessLoadStrategy]=bean-ref:fireflowDefaultProcessLoadStrategy

# 1.6 运行环境模块，Fireflow引擎既可以在J2EE环境下运行，可以在J2SE环境下运行（如单元测试环境、fireflow-designer模拟器环境），
# 请在此处设置运行环境极其属性。
fireflowRuntimeContext.defaultEngineModules[org.fireflow.engine.modules.environment.Environment]=bean-ref:fireflowJ2SEEnvironment

# 1.7 Fireflow Engine缺省采用Hibernate3.x 作为存储层方案。如果项目采用了其他的存储层框架，则需要重新实现org.fireflow.engine.modules.persistence.PersistenceService，
# 假设新的PersistenceService的bean id 是myPersistenceService，则替换下面的hibernatePersistenceService。
# 如果项目也是采用hibernate框架，请将下面的sessionFactory修改为正确的值。
fireflowRuntimeContext.defaultEngineModules[org.fireflow.engine.modules.persistence.PersistenceService]=bean-ref:hibernatePersistenceService
hibernatePersistenceService.sessionFactory=bean-ref:demoHibernateSessionFactory


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 2、其他一些设置
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 2.1 fireflowServer.engineServiceEnabled表示是否将引擎发布成webservice供远程调用，缺省是false(不发布)
# fireflowServer.engineServiceEnabled=false

# 2.2 fireflowEngineService保持的最大session数，
# 在fireflowServer.engineServiceEnabled=true时，这个参数才有意义
# fireflowEngineService.maxSessions=50

# 2.3 fireflowEngineService中的Session超时时长（按秒计）
# 在fireflowServer.engineServiceEnabled=true时，这个参数才有意义
# fireflowEngineService.sessionToIdleSeconds=1800
